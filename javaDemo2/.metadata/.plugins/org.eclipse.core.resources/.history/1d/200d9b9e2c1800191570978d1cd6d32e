package algorithm;

import java.util.Arrays;

/* 快排算法 */
public class Demo1 {
	public static void main(String[] args) {
		Demo1 demo = new Demo1();
		boolean flag = true;
		long startTime = System.currentTimeMillis();
		
		if (flag) {
			for (var i = 0; i < 10000; i++) {
				int[] array = {7, 6, 5, 4, 3, 2, 1, 0 , 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 9};
				demo.quickSort(array);
				
				System.out.println("[times]" + i);
			}
		} else {
			for (var i = 0; i < 10000; i++) {
				int[] array = {7, 6, 5, 4, 3, 2, 1, 0 , 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 9};
				demo.bubbleSort(array);
				
				System.out.println("[times]" + i);
			} // 211ms - 305ms
		}
		
		long endTime = System.currentTimeMillis();
		System.out.println("程序运行10000次时间" + (endTime - startTime) + "(ms)");
	}
	
	public void quickSort(int[] args) {
		for (int i = 1; i < args.length; i++) {
			int j = i - 1; // i =4
			int temp = args[i]; // i =5
			while (j >= 0 && temp < args[j]) {
				args[j+1] = args[j]; 
				j--;
			}
			args[j+1] = temp;
		}
	}
	
	public void bubbleSort(int[] args) {
		for (int i = 0; i < args.length; i++) {
			for (var j = i+1; j < args.length; j++) {
				if (args[i] > args[j]) {
					int temp = args[i];
					args[i] = args[j];
					args[j] = temp;
				}
			}
		}
	}
}
